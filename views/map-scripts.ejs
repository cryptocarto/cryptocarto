<script>

    // Define global markers and rectangles array
    var markers = new Array;
    var rectangles = new Array;

    var map = L.map('map').setView([parseFloat(jQuery('#currentlat').text()),parseFloat(jQuery('#currentlng').text())],18);
    var rectangleToReserve = null;

    // Define clusters
    var clusters = L.markerClusterGroup({
        disableClusteringAtZoom : 18
    });;

    L.tileLayer('https://tile-manager.cryptocarto.xyz/osm/{z}/{x}/{y}.png',{maxZoom:18, minZoom:6}).addTo(map);

    // Click on map handle 
    map.on('click', onMapClick);

    // Popup open handle
    map.on('popupopen', function (event) {
        if (event.popup.tokenIteratorId != undefined) {
            loadPopupContents(event.popup);
        }
    });

    // Load map markers for current view
    loadMarkers = function() {
        var nbTokens = parseInt(jQuery('.token').length);

        for (i = 0; i< nbTokens; i++) {
            lat = parseFloat(jQuery('#token-'+i+'-latitude').text());
            lng = parseFloat(jQuery('#token-'+i+'-longitude').text());

            // Calculate tile coordinates
            n = 2 ** 18 // n = 2 ^ zoom
            xtile = n * ((lng + 180) / 360) // xtile = n * ((lon_deg + 180) / 360)
            ytile = n * (1 - (Math.log(Math.tan(lat / 180 * Math.PI) + (1/Math.cos(lat / 180 * Math.PI))) / Math.PI)) / 2

            // Defines a popup object with content and iterator ID
            popupObject = L.popup({minWidth: 255}).setContent('Loading...');
            popupObject.tokenIteratorId = i;

            markers[jQuery('#token-'+i+'-id').text()] = L.marker([lat,lng]).bindPopup(popupObject);
            clusters.addLayer(markers[jQuery('#token-'+i+'-id').text()]);

            // Create a rectangle for the reserved spot around the pin
            rectangles[jQuery('#token-'+i+'-id').text()] = L.rectangle([[lat-0.00005,lng-0.00005], [lat+0.00005,lng+0.00005]], {color: '#4054b2', weight: 1}).bindPopup(popupObject);
            clusters.addLayer(rectangles[jQuery('#token-'+i+'-id').text()]);
        
        }
       
        map.addLayer(clusters);
        
        // Open popup if needed
        if (jQuery('#viewPinId').text() != "" && (jQuery('#viewPinId').text() in markers)) {
            openNeededPopup();
        }
    }

    loadPopupContents = function(popup) {

        tokenIteratorId = popup.tokenIteratorId;

        popupContent =  '<div id="popup-token-'+tokenIteratorId+'">' +
                '<span class="token-message">' + jQuery('#token-'+tokenIteratorId+'-message').text() + '</span><br/>' +
                '<img src="' + blockies.create({ seed: jQuery('#token-'+tokenIteratorId+'-owner').text().toLowerCase() ,size: 8,scale: 3}).toDataURL() + '" class="blockies-avatar" />' +
                '<span class="token-message-author">by <a target="_blank" class="pin-explorer-link" onclick="explorePinTokens({owner: \'' + jQuery('#token-'+tokenIteratorId+'-owner').text() + '\'})" >' +
                    jQuery('#token-'+tokenIteratorId+'-displayname').text() + '</a>' + 
                '</span><div class="spacer"></div>' +
                '<button onclick="' + 
                    '$(\'#popup-token-'+tokenIteratorId+'\').children(\'.share-pin\').slideToggle();'+
                    '$(\'#popup-token-'+tokenIteratorId+'\').children(\'.metadata\').slideUp();'+
                '">Share this pin</button>' +
                '<button onclick="' + 
                    '$(\'#popup-token-'+tokenIteratorId+'\').children(\'.metadata\').slideToggle();'+
                    '$(\'#popup-token-'+tokenIteratorId+'\').children(\'.share-pin\').slideUp();'+
                '">Show Metadata</button>' +
                '<div class="share-pin">' +
                    '<br />Shareable link: <a target="_blank" href="https://app.cryptocarto.xyz/view-pin/' + jQuery('#token-'+tokenIteratorId+'-id').text() + '">https://app.cryptocarto.xyz/view-pin/' + jQuery('#token-'+tokenIteratorId+'-id').text() + '</a><br/>' + 
                    '<textarea id="share-link" class="share-link">https://app.cryptocarto.xyz/view-pin/' + jQuery('#token-'+tokenIteratorId+'-id').text() + '</textArea>' +
                    '<a class="button-style" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=app.cryptocarto.xyz/view-pin/' + jQuery('#token-'+tokenIteratorId+'-id').text() + '">Share on Facebook</a>' +
                    '<button onclick="document.getElementById(\'share-link\').select(); document.execCommand(\'copy\'); $(\'#copied-message-conf\').show().fadeOut(2000);">Copy link to clipboard</button>' +
                    '<span id="copied-message-conf"> Copied</span>' +
                '</div>' +
                '<div class="metadata">' +
                    '<br />Pin #' + jQuery('#token-'+tokenIteratorId+'-id').text() + '<br/>' +
                    'Latitude: ' + lat + ' / Longitude: ' + lng + '<br/>' +
                    'Created on ' + jQuery('#token-'+tokenIteratorId+'-creation-timestamp').text() + 
                    '<br/>Modified on ' + jQuery('#token-'+tokenIteratorId+'-modification-timestamp').text() +
                    '<br/>' +'Tile coordinates: x = ' + xtile + ' ; y = ' + ytile +
                    '<br/>' +'<a target="_blank" href="/img/pin-token/' + jQuery('#token-'+tokenIteratorId+'-id').text() + '.png">View token image</a>' +
                    '<br/>' +'<a target="_blank" href="/metadata/pin-token/' + jQuery('#token-'+tokenIteratorId+'-id').text() + '">View token metadata JSON</a>' +
                '</div>' +
                '<div class="transfer-pin transfer-pin-' + jQuery('#token-'+tokenIteratorId+'-id').text() + '" id="transfer-pin-' + jQuery('#token-'+tokenIteratorId+'-id').text() + '">' +
                    '<form class="transfer-pin-form" action="/transfer-pin" method="post">' +
                        '<br /><label for="transferaddress">Transfer token to address:</label><br />(uses 1 &#127757;)<br />' +
                        '<input type="text" class="form-control transferaddress" placeholder="0x..." name="transferaddress" required="true" />' +
                        '<input type="hidden" class="form-control tokenidtotransfer" placeholder="id" name="tokenidtotransfer" required="true" value="' + jQuery('#token-'+tokenIteratorId+'-id').text() + '"/>' +
                        '<br /><button type="submit" class="submit-transfer" onclick="checkTransferForm();">Transfer token</button>' +
                        '<span class="loader"><br /><img src="/img/loader.gif" /> transferring token...</span>' +
                    '</form>' +
                '</div>' +
                '<div class="modify-pin modify-pin-' + jQuery('#token-'+tokenIteratorId+'-id').text() + '" id="modify-pin-' + jQuery('#token-'+tokenIteratorId+'-id').text() + '">' +
                    '<form class="modify-pin-form" action="/modify-pin" method="post">' +
                        '<br /><label for="modifiedmessage">New message for this token:</label><br />(uses 1 &#127757;)<br />' +
                        '<input type="text" class="form-control modifiedmessage" value="' + jQuery('#token-'+tokenIteratorId+'-message').text() + '" name="modifiedmessage" required="true" />' +
                        '<input type="hidden" class="form-control tokenidtomodify" placeholder="id" name="tokenidtomodify" required="true" value="' + jQuery('#token-'+tokenIteratorId+'-id').text() + '"/>' +
                        '<br /><button type="submit" class="submit-modify" onclick="checkModifyForm();">Modify token</button>' +
                        '<span class="loader"><br /><img src="/img/loader.gif" /> modifying token...</span>' +
                    '</form>' +
                '</div>' +
                '</div>';

        popup.setContent(popupContent).update();
    }

    // Load markers for current area
    loadMarkers();

    updateMiniMap();

    // Helper to open needed popup using viewPinId field
    function openNeededPopup() {
        map.setZoom(18);
        var tokenId = jQuery('#viewPinId').text();
        jQuery('#viewPinId').text("");
        
        markers[tokenId].openPopup();
        if (jQuery('#viewPinId').hasClass('transfer')){
            $('.transfer-pin-'+ tokenId).slideDown();
            jQuery('#viewPinId').removeClass('transfer');
        }
        if (jQuery('#viewPinId').hasClass('modify')){
            $('.modify-pin-'+ tokenId).slideDown();
            jQuery('#viewPinId').removeClass('modify');
        }
    }

    function onMapClick(e) {

        if (rectangleToReserve) {
            map.removeControl(rectangleToReserve);
        }

        var popup = L.popup()
            .setLatLng(e.latlng)
            .setContent(jQuery('.new-transaction').html())
            .openOn(map);
        
        lat = Math.round(e.latlng.lat * 10000)/10000;
        lng = Math.round(e.latlng.lng * 10000)/10000;

        // Create a rectangle for the spot to reserve around the click zone
        rectangleToReserve = L.rectangle([[lat-0.00005,lng-0.00005], [lat+0.00005,lng+0.00005]], {color: '#00961e', weight: 1}).addTo(map);

        $('.latitude').val(lat);
        $('.longitude').val(lng);
        $('.lat-lng-helper').text("(lat: " + lat + " / lng: " + lng + ")");
        $('#currentlat').text(lat);
        $('#currentlng').text(lng);

        $('.leaflet-popup').find("textarea").focus()

        // Set map center, shifted by a Y factor depending on screen height
        shiftFactor = 0.1
        if (screen.height < 500) { shiftFactor = 0.25 }
        else if (screen.height < 600) { shiftFactor = 0.20 }
        else if (screen.height < 800) { shiftFactor = 0.15 }

        coordinates = map.project(e.latlng, map.getZoom());
        coordinates.y -= map.getSize().y * shiftFactor;
        map.setView(map.unproject(coordinates));
    }

    // Refresh tokens on move
    map.on('moveend', function(e){
        previousLat = $('#currentlat').text();
        previousLng = $('#currentlng').text();
        newLat = Math.round(map.getCenter().lat * 10000)/10000;
        newLng = Math.round(map.getCenter().lng * 10000)/10000;

        // Calculate current lat/lng distance before needing to reload
        latDiffToReload = Math.abs(map.getBounds()._northEast.lat - map.getBounds()._southWest.lat) / 2.0;
        lngDiffToReload = Math.abs(map.getBounds()._northEast.lng - map.getBounds()._southWest.lng) / 2.0;

        if (Math.abs(previousLat-newLat) > latDiffToReload || Math.abs(previousLng-newLng) > lngDiffToReload) {
            $('#currentlat').text(newLat);
            $('#currentlng').text(newLng);
            loadPinTokens();
        }
    
    });

    // Refresh tokens on move
    map.on('zoomend', function(e){
        previousZoom = $('#currentzoom').text();
        newZoom = map.getZoom();
        $('#currentzoom').text(newZoom);

        // Perform only if moved more than 0.02 in coordinates
        if (previousZoom > newZoom) {
            loadPinTokens();
        }
    });

    // Transaction form validator
    checkTransactionForm = function() {
        if ($('.leaflet-popup').find(".new-transaction-form").valid()) {
            $('.leaflet-popup').find(".new-transaction-form").submit();
            $('.leaflet-popup').find(".submit-transaction").attr('disabled', true);
            $('.leaflet-popup').find('.loader').show();
        }
    };

    // Transfer form validator
    checkTransferForm = function() {
        if ($('.leaflet-popup').find(".transfer-pin-form").valid()) {
            $('.leaflet-popup').find(".transfer-pin-form").submit();
            $('.leaflet-popup').find(".submit-transfer").attr('disabled', true);
            $('.leaflet-popup').find('.loader').show();
        }
    };

    // Modification form validator
    checkModifyForm = function() {
        if ($('.leaflet-popup').find(".modify-pin-form").valid()) {
            $('.leaflet-popup').find(".modify-pin-form").submit();
            $('.leaflet-popup').find(".submit-modify").attr('disabled', true);
            $('.leaflet-popup').find('.loader').show();
        }
    };

    // Load PinTokens around current position
    loadPinTokens = function() {
        currentLat = jQuery('#currentlat').text();
        currentLng = jQuery('#currentlng').text();
        map.closePopup();

        //Display loader and scroll to top
        jQuery('.ajax-loader').show();
        jQuery('#tokens').scrollTop(0);

        jQuery.ajax({
            method: "POST",
            url: "/get-pin-tokens-in-bounds",
            data: {
                highLatitude: map.getBounds()._northEast.lat, 
                highLongitude: map.getBounds()._northEast.lng,
                lowLatitude: map.getBounds()._southWest.lat, 
                lowLongitude: map.getBounds()._southWest.lng
            }
        })
        .done(function(response) {
            //Hide loader
            jQuery('.ajax-loader').hide();

            //Display new markers in side list
            jQuery('#neighbour-token-list').html(response);

            //Remove current markers
            for (let tokenIdToRemove in markers) { 
                map.removeLayer(markers[tokenIdToRemove]);
            }  
            markers = []

            //Remove current rectangles
            for (let tokenIdToRemove in rectangles) { 
                map.removeLayer(rectangles[tokenIdToRemove]);
            }  
            rectangles = []

            //Remove clusters
            clusters.clearLayers();

            // Load markers for current area
            loadMarkers();

        })
        .fail(function() { 
            //Remove current markers
            for (let tokenId in markers) { map.removeLayer(markers[tokenId]); }

            console.log("Error while updating PinTokens"); 
        });

    };

    // Load PinTokens around current position
    explorePinTokens = function(params) {
        //Display loader and scroll to top
        jQuery('.pin-explorer').show();
        jQuery('.ajax-loader').show();

        jQuery.ajax({
            method: "POST",
            url: "/get-pin-tokens-with-params",
            data: { params: params }
        })
        .done(function(response) {
            //Hide loader
            jQuery('.ajax-loader').hide();

            $(".pin-explorer-data").html(response);
        })
        .fail(function() { 
            $(".pin-explorer-data").html("Error when loading pins");
        });

    };

    // Loads leaderboard
    viewLeaderboard = function(params) {
        //Display loader and scroll to top
        jQuery('.leaderboard').show();
        jQuery('.ajax-loader').show();

        jQuery.ajax({
            method: "GET",
            url: "/get-leaderboard"
        })
        .done(function(response) {
            //Hide loader
            jQuery('.ajax-loader').hide();

            $(".leaderboard-data").html(response);
        })
        .fail(function() { 
            jQuery('.ajax-loader').hide();
            $(".leaderboard-data").html("Error when loading leaderboard");
        });

    };


    // Update minimap red square position
    function updateMiniMap() {
        lat = parseFloat($('#currentlat').text());
        lng = parseFloat($('#currentlng').text());
        topVal = Math.round((1 - (Math.log(Math.tan(lat / 180 * Math.PI) + (1/Math.cos(lat / 180 * Math.PI))) / Math.PI)) / 2 * 60) - 3;
        leftVal = Math.round((lng + 180) / 360 * 60) - 3;
        $('.square').css({"top": topVal + "px", "left": leftVal + "px"});
    };

    $('body').on("click", updateMiniMap);
    
</script>